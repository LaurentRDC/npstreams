name: Continuous integration

on: 
  push:
  pull_request:

jobs:
  build:
    # To prevent this job from running, have "[skip ci]" or "[ci skip]" in the commit message 
    if: contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt') }}

    - uses: actions/cache@v2
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt') }}

    - uses: actions/cache@v2
      if: startsWith(runner.os, 'Windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('**/*requirements.txt') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt

    # Note the use of the -Wa flag to show DeprecationWarnings
    # We run the tests on the installed package
    - name: Unit tests
      run: |
        python setup.py install
        cd ~
        python -Wa -m pytest --pyargs npstreams
    
    - name: Build documentation
      run: |
        python setup.py build_sphinx
    
    - name: Doctests
      run: |
        python -m sphinx -b doctest docs build
    
    - name: Build artifacts
      run: |
        python setup.py sdist bdist_wheel

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ runner.os }}-artifact
        path: dist/*
        retention-days: 7

  release:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        path: dist/

    - name: Create release description
      run: |
        python tools/release-description.py CHANGELOG.rst > description.md
        cat description.md

    - name: Create release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        body_path: description.md
        files: |
          dist/*
    
    - name: Upload to PyPI
      if: startsWith(github.ref, 'refs/tags/')
      uses: pypa/gh-action-pypi-publish@release/v1
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}